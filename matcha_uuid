
#UI no.1
import UIKit
import Foundation

class nickName_ViewController: UIViewController {
    
    //UserDefaultsのインスタンスを取得
    let uuiddata: UserDefaults = UserDefaults.standard
        var uuid: String = ""

    
    @IBOutlet weak var nickNameTextField: UITextField!
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
    }
    
    //ボタンtap時にUUIDの生成とnicknameの登録をする
    @IBAction func agreeAndRegisterButtonTapped(_ sender: Any) {
        
        print("agreeAndRegisterButtonOK")
       
        
    //nicknameが空の際に、アラームを出す
        if(nickNameTextField.text?.isEmpty)!
        {
            displayMessage(userMessage: "Please input your nickname" )
            return
        }
        
    //httpリクエスト
        guard let url = URL(string: "https://2vqja8y9qh.execute-api.ap-northeast-1.amazonaws.com/userprofile")else {
            return
        }
        
        print("Making API call...")
        
        //randamでUUIDを取るようにする
        let uuid = UUID().uuidString
        print(uuid)
        
        let userDefaults = UserDefaults.standard
        // userUUIDというキーで値「uuid」を保存
        userDefaults.set(uuid, forKey: "userUUID")
       // UserDefaultsへの値の保存
        userDefaults.synchronize()
        print("UUIDをuserdefaultsの保存")
        print(uuid)
        
        
        var request = URLRequest(url: url)
        
        
        
        
        request.httpMethod = "POST"
        request.setValue("application/json", forHTTPHeaderField: "Content-Type")
        request.setValue("VTL9FWkDlR53i8h8cx4nA87Pa655eNcu1fd7nOoP", forHTTPHeaderField: "x-api-key")
        let body: [String: AnyHashable] = [
            "UUID": uuid,
            "nickname":nickNameTextField.text!,
        ]
        
        request.httpBody = try? JSONSerialization.data(withJSONObject: body, options: .fragmentsAllowed)
        request.setValue("application/json", forHTTPHeaderField: "Content-Type")
        
        //Makr the request
        let task = URLSession.shared.dataTask(with: request) {data, _, error in
            guard let data = data, error == nil else {
                return
            }
            do{
                let response = try JSONDecoder().decode(Response.self, from: data)
                print("SUCCESS:\(response)")
           }
            catch{
                print(error)
            }
        }
        task.resume()
        
        struct Response: Codable{
            let uuid: String
            let nickname: String
            
        }
        
        
        //ページ遷移
        self.performSegue(withIdentifier: "tobirthdayVC", sender: nil)
        
    }
    
    func removeActivityIndicator(activityIndicator: UIActivityIndicatorView)
    {
        DispatchQueue.main.async
        {
            activityIndicator.stopAnimating()
            activityIndicator.removeFromSuperview()
        }
    }
        
    func displayMessage(userMessage:String) -> Void {
        DispatchQueue.main.async
        {
            let alertController = UIAlertController(title:"Alert", message: userMessage, preferredStyle:.alert)
            
            let OKaction = UIAlertAction(title: "OK", style: .default)
            { (action:UIAlertAction!) in
                //code in this block will trigger when OK button tapped.
                print("OK button tapped")
                DispatchQueue.main.async
                   {
                    self.dismiss(animated: true, completion: nil)
                }
            }
            alertController.addAction(OKaction)
            self.present(alertController, animated: true, completion: nil)
        }
        
    }
    
    //UserDefaultsに書き込むメソッド
    func saveUserDefaults() {
            //保存は基本の型のは同じ構文
        uuiddata.set(uuid, forKey: "userUUID")
            
       print("UserUUIDの保存コード")
       print(uuid)
        }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destination.
        // Pass the selected object to the new view controller.
    }
    */

    
}




#UI no.2
//  birthDay_ViewController.swift
//  matcha_proto0301
//
//  Created by 森永貴大 on 2022/03/01.
//

import UIKit

class birthDay_ViewController: UIViewController {
    
    @IBOutlet weak var birthDayTextField: UITextField!
    
    
    let datePicker = UIDatePicker()
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
   //     createDatePicker()
    }
    
    
    //birthdayボタンがクリックされた時
    @IBAction func birthDayNextButtonTapped(_ sender: Any) {
        print("birthDayNextOK")
        
        
        
        //textがempty
        if(birthDayTextField.text?.isEmpty)!
        {
            displayMessage(userMessage: "Please input your birthday" )
            return
        }
        //httpリクエスト
        guard let url = URL(string: "https://2avutrlhdd.execute-api.ap-northeast-1.amazonaws.com/userprofile")else {
            return
        }
        
        print("Making API call...")
        // UserDefaultsの参照
        let userDefaults = UserDefaults.standard
       
        // userUUIDというキーを指定して保存していたString型の値を取り出す
         let uuid = userDefaults.string(forKey: "userUUID")
        
        
        
        var request = URLRequest(url: url)
        
        
        request.httpMethod = "POST"
        request.addValue("application/json", forHTTPHeaderField: "Content-Type")
        request.addValue("JZCPbkJzZh6IB2MGi0vVr5ddRPwHI02z83szdaba", forHTTPHeaderField: "x-api-key")
        let body: [String: AnyHashable] = [
            "UUID": uuid,
            "date_of_birth":birthDayTextField.text!,
        ]
        
        request.httpBody = try? JSONSerialization.data(withJSONObject: body, options: .fragmentsAllowed)
        request.addValue("application/json", forHTTPHeaderField: "Content-Type")
        
        //Makr the request
        let task = URLSession.shared.dataTask(with: request) {data, _, error in
            guard let data = data, error == nil else {
                return
            }
            do{
                let response = try JSONDecoder().decode(Response.self, from: data)
                print("SUCCESS:\(response)")
           }
            catch{
                print(error)
            }
        }
        task.resume()
        
        struct Response: Codable{
            let uuid: String
            let nickname: String
            let date_of_birth: String
            
        }
        //ページ遷移
        self.performSegue(withIdentifier: "togenderVC", sender: nil)
    }
    
    func removeActivityIndicator(activityIndicator: UIActivityIndicatorView)
    {
        DispatchQueue.main.async
        {
            activityIndicator.stopAnimating()
            activityIndicator.removeFromSuperview()
        }
    }
        
    func displayMessage(userMessage:String) -> Void {
        DispatchQueue.main.async
        {
            let alertController = UIAlertController(title:"Alert", message: userMessage, preferredStyle:.alert)
            
            let OKaction = UIAlertAction(title: "OK", style: .default)
            { (action:UIAlertAction!) in
                //code in this block will trigger when OK button tapped.
                print("OK button tapped")
                DispatchQueue.main.async
                   {
                    self.dismiss(animated: true, completion: nil)
                }
            }
            alertController.addAction(OKaction)
            self.present(alertController, animated: true, completion: nil)
        }
        
    }
        

//    func createDatePicker(){
//
//        birthDayTextField.textAlignment = .center
//        //toolbar
//        let toolbar = UIToolbar()
//        toolbar.sizeToFit()
//        //bar button
//        let doneBtn = UIBarButtonItem(barButtonSystemItem: .done, target: nil, action: #selector(donePressed))
//        toolbar.setItems([doneBtn], animated: true)
//
//        //assign toolbar
//        birthDayTextField.inputAccessoryView = toolbar
//
//        //assign date picker ti the text field
//        birthDayTextField.inputView = datePicker
//
//        //birth picker mode
//        datePicker.datePickerMode = .date
//
//
//    }
//
//
//    @objc func donePressed(){
//        //formatter
//        let formatter = DateFormatter()
//        formatter.dateStyle = .medium
//        formatter.timeStyle = .none
//
//
//        birthDayTextField.text = formatter.string(from: datePicker.date)
//        self.view.endEditing(true)
//
//    }
//

}

